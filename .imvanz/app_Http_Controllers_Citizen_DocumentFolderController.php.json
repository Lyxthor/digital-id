[
  {
    "timestamp": "2025-01-15T05:26:29.579Z",
    "fileName": "app\\Http\\Controllers\\Citizen\\DocumentFolderController.php",
    "content": "<?php\n\nnamespace App\\Http\\Controllers\\Citizen;\n\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Http\\Request;\nuse App\\Helpers\\RequestHandler;\nuse App\\Http\\Requests\\Citizen\\StoreDocumentFolder;\nuse App\\Http\\Requests\\Dukcapil\\Document\\UpdateDocumentRequest;\nuse App\\Models\\DocumentFolder;\nuse Exception;\nuse Illuminate\\Http\\Response;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass DocumentFolderController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index()\n    {\n        return RequestHandler::handle(function() {\n            $user = Auth::user();\n            $folders = $user->folders;\n            return view('citizen.document_folder.index', compact('folders'));\n        });\n    }\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create()\n    {\n        return RequestHandler::handle(function() {\n            $user = Auth::user();\n            $documents = $user->documents;\n            return view('citizen.document_folder.create', compact('documents'));\n        });\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(StoreDocumentFolder $req)\n    {\n        //\n        return RequestHandler::handle(function() use($req) {\n            $validData = $req->validated();\n            $documents = $validData['documents'];\n            unset($validData['documents']);\n            $folder = DocumentFolder::create($validData);\n            $folder->documents()->sync($documents);\n\n            return redirect()\n            ->route('citizen.document_folder.index')\n            ->with('success', 'Documents folder created successfully');\n        });\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show($id)\n    {\n        return RequestHandler::handle(function() use($id) {\n            $folder = DocumentFolder::with(['documents'])->find($id);\n            if($folder == null)\n            {\n                throw new Exception(\"Folder not found\", Response::HTTP_NOT_FOUND);\n                return;\n            }\n\n            return view('citizen.document_folder.show', compact('folder'));\n        });\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(string $id)\n    {\n        return RequestHandler::handle(function() use($id) {\n            $folder = DocumentFolder::with(['documents'])->find($id);\n            if($folder == null)\n            {\n                throw new Exception(\"Folder not found\", Response::HTTP_NOT_FOUND);\n                return;\n            }\n\n            $user = Auth::user();\n            $documents = $user->documents;\n\n            return view('citizen.document_folder.edit', compact('folder', 'documents'));\n        });\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(UpdateDocumentRequest $req, string $id)\n    {\n        return RequestHandler::handle(function() use($req, $id) {\n            $folder = DocumentFolder::with(['documents'])->find($id);\n            if($folder == null)\n            {\n                throw new Exception(\"Folder not found\", Response::HTTP_NOT_FOUND);\n                return;\n            }\n\n            $validData = $req->validated();\n            $documents = $validData['documents'];\n            unset($validData['documents']);\n            $folder->update($validData);\n            $folder->documents()->sync($documents);\n\n            return redirect()\n            ->route('citizen.document_folder.index')\n            ->with('success', 'Documents folder updated successfully');\n        });\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy($id)\n    {\n        return RequestHandler::handle(function() use($id) {\n            $folder = DocumentFolder::with(['documents'])->find($id);\n            if($folder == null)\n            {\n                throw new Exception(\"Folder not found\", Response::HTTP_NOT_FOUND);\n                return;\n            }\n\n            $folder->delete();\ns\n            return redirect()\n            ->route('citizen.document_folder.index')\n            ->with('success', 'Documents folder deleted successfully');\n        });\n    }\n}\n",
    "format": "php"
  },
  {
    "timestamp": "2025-01-15T05:26:30.890Z",
    "fileName": "app\\Http\\Controllers\\Citizen\\DocumentFolderController.php",
    "content": "<?php\n\nnamespace App\\Http\\Controllers\\Citizen;\n\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Http\\Request;\nuse App\\Helpers\\RequestHandler;\nuse App\\Http\\Requests\\Citizen\\StoreDocumentFolder;\nuse App\\Http\\Requests\\Dukcapil\\Document\\UpdateDocumentRequest;\nuse App\\Models\\DocumentFolder;\nuse Exception;\nuse Illuminate\\Http\\Response;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass DocumentFolderController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index()\n    {\n        return RequestHandler::handle(function() {\n            $user = Auth::user();\n            $folders = $user->folders;\n            return view('citizen.document_folder.index', compact('folders'));\n        });\n    }\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create()\n    {\n        return RequestHandler::handle(function() {\n            $user = Auth::user();\n            $documents = $user->documents;\n            return view('citizen.document_folder.create', compact('documents'));\n        });\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(StoreDocumentFolder $req)\n    {\n        //\n        return RequestHandler::handle(function() use($req) {\n            $validData = $req->validated();\n            $documents = $validData['documents'];\n            unset($validData['documents']);\n            $folder = DocumentFolder::create($validData);\n            $folder->documents()->sync($documents);\n\n            return redirect()\n            ->route('citizen.document_folder.index')\n            ->with('success', 'Documents folder created successfully');\n        });\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show($id)\n    {\n        return RequestHandler::handle(function() use($id) {\n            $folder = DocumentFolder::with(['documents'])->find($id);\n            if($folder == null)\n            {\n                throw new Exception(\"Folder not found\", Response::HTTP_NOT_FOUND);\n                return;\n            }\n\n            return view('citizen.document_folder.show', compact('folder'));\n        });\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(string $id)\n    {\n        return RequestHandler::handle(function() use($id) {\n            $folder = DocumentFolder::with(['documents'])->find($id);\n            if($folder == null)\n            {\n                throw new Exception(\"Folder not found\", Response::HTTP_NOT_FOUND);\n                return;\n            }\n\n            $user = Auth::user();\n            $documents = $user->documents;\n\n            return view('citizen.document_folder.edit', compact('folder', 'documents'));\n        });\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(UpdateDocumentRequest $req, string $id)\n    {\n        return RequestHandler::handle(function() use($req, $id) {\n            $folder = DocumentFolder::with(['documents'])->find($id);\n            if($folder == null)\n            {\n                throw new Exception(\"Folder not found\", Response::HTTP_NOT_FOUND);\n                return;\n            }\n\n            $validData = $req->validated();\n            $documents = $validData['documents'];\n            unset($validData['documents']);\n            $folder->update($validData);\n            $folder->documents()->sync($documents);\n\n            return redirect()\n            ->route('citizen.document_folder.index')\n            ->with('success', 'Documents folder updated successfully');\n        });\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy($id)\n    {\n        return RequestHandler::handle(function() use($id) {\n            $folder = DocumentFolder::with(['documents'])->find($id);\n            if($folder == null)\n            {\n                throw new Exception(\"Folder not found\", Response::HTTP_NOT_FOUND);\n                return;\n            }\n\n            $folder->delete();\n\n            return redirect()\n            ->route('citizen.document_folder.index')\n            ->with('success', 'Documents folder deleted successfully');\n        });\n    }\n}\n",
    "format": "php"
  },
  {
    "timestamp": "2025-01-15T05:32:14.135Z",
    "fileName": "app\\Http\\Controllers\\Citizen\\DocumentFolderController.php",
    "content": "<?php\n\nnamespace App\\Http\\Controllers\\Citizen;\n\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Http\\Request;\nuse App\\Helpers\\RequestHandler;\nuse App\\Http\\Requests\\Citizen\\StoreDocumentFolder;\nuse App\\Http\\Requests\\Dukcapil\\Document\\UpdateDocumentRequest;\nuse App\\Models\\DocumentFolder;\nuse Exception;\nuse Illuminate\\Http\\Response;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass DocumentFolderController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index()\n    {\n        return RequestHandler::handle(function() {\n            $user = Auth::user();\n            $folders = $user->folders;\n            return view('citizen.document_folder.index', compact('folders'));\n        });\n    }\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create()\n    {\n        return RequestHandler::handle(function() {\n            $user = Auth::user();\n            $documents = $user->documents;\n            return view('citizen.document_folder.create', compact('documents'));\n        });\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(StoreDocumentFolder $req)\n    {\n        //\n        return RequestHandler::handle(function() use($req) {\n            $validData = $req->validated();\n            $documents = $validData['documents'];\n            unset($validData['documents']);\n            $folder = DocumentFolder::create($validData);\n            $folder->documents()->sync($documents);\n\n            return redirect()\n            ->route('citizen.document_folder.index')\n            ->with('success', 'Documents folder created successfully');\n        });\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show($id)\n    {\n        return RequestHandler::handle(function() use($id) {\n            $folder = DocumentFolder::with(['documents'])->find($id);\n            if($folder == null)\n            {\n                throw new Exception(\"Folder not found\", Response::HTTP_NOT_FOUND);\n                return;\n            }\n            return view('citizen.document_folder.show', compact('folder'));\n        });\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(string $id)\n    {\n        return RequestHandler::handle(function() use($id) {\n            $folder = DocumentFolder::with(['documents'])->find($id);\n            if($folder == null)\n            {\n                throw new Exception(\"Folder not found\", Response::HTTP_NOT_FOUND);\n                return;\n            }\n\n            $user = Auth::user();\n            $documents = $user->documents;\n\n            return view('citizen.document_folder.edit', compact('folder', 'documents'));\n        });\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(UpdateDocumentRequest $req, string $id)\n    {\n        return RequestHandler::handle(function() use($req, $id) {\n            $folder = DocumentFolder::with(['documents'])->find($id);\n            if($folder == null)\n            {\n                throw new Exception(\"Folder not found\", Response::HTTP_NOT_FOUND);\n                return;\n            }\n\n            $validData = $req->validated();\n            $documents = $validData['documents'];\n            unset($validData['documents']);\n            $folder->update($validData);\n            $folder->documents()->sync($documents);\n\n            return redirect()\n            ->route('citizen.document_folder.index')\n            ->with('success', 'Documents folder updated successfully');\n        });\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy($id)\n    {\n        return RequestHandler::handle(function() use($id) {\n            $folder = DocumentFolder::with(['documents'])->find($id);\n            if($folder == null)\n            {\n                throw new Exception(\"Folder not found\", Response::HTTP_NOT_FOUND);\n                return;\n            }\n\n            $folder->delete();\n\n            return redirect()\n            ->route('citizen.document_folder.index')\n            ->with('success', 'Documents folder deleted successfully');\n        });\n    }\n}\n",
    "format": "php"
  },
  {
    "timestamp": "2025-01-15T05:32:47.510Z",
    "fileName": "app\\Http\\Controllers\\Citizen\\DocumentFolderController.php",
    "content": "<?php\n\nnamespace App\\Http\\Controllers\\Citizen;\n\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Http\\Request;\nuse App\\Helpers\\RequestHandler;\nuse App\\Http\\Requests\\Citizen\\StoreDocumentFolder;\nuse App\\Http\\Requests\\Dukcapil\\Document\\UpdateDocumentRequest;\nuse App\\Models\\DocumentFolder;\nuse Exception;\nuse Illuminate\\Http\\Response;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass DocumentFolderController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index()\n    {\n        return RequestHandler::handle(function() {\n            $user = Auth::user();\n            $folders = $user->userable->folders;\n            return view('citizen.document_folder.index', compact('folders'));\n        });\n    }\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create()\n    {\n        return RequestHandler::handle(function() {\n            $user = Auth::user();\n            $documents = $user->documents;\n            return view('citizen.document_folder.create', compact('documents'));\n        });\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(StoreDocumentFolder $req)\n    {\n        //\n        return RequestHandler::handle(function() use($req) {\n            $validData = $req->validated();\n            $documents = $validData['documents'];\n            unset($validData['documents']);\n            $folder = DocumentFolder::create($validData);\n            $folder->documents()->sync($documents);\n\n            return redirect()\n            ->route('citizen.document_folder.index')\n            ->with('success', 'Documents folder created successfully');\n        });\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show($id)\n    {\n        return RequestHandler::handle(function() use($id) {\n            $folder = DocumentFolder::with(['documents'])->find($id);\n            if($folder == null)\n            {\n                throw new Exception(\"Folder not found\", Response::HTTP_NOT_FOUND);\n                return;\n            }\n            return view('citizen.document_folder.show', compact('folder'));\n        });\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(string $id)\n    {\n        return RequestHandler::handle(function() use($id) {\n            $folder = DocumentFolder::with(['documents'])->find($id);\n            if($folder == null)\n            {\n                throw new Exception(\"Folder not found\", Response::HTTP_NOT_FOUND);\n                return;\n            }\n\n            $user = Auth::user();\n            $documents = $user->documents;\n\n            return view('citizen.document_folder.edit', compact('folder', 'documents'));\n        });\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(UpdateDocumentRequest $req, string $id)\n    {\n        return RequestHandler::handle(function() use($req, $id) {\n            $folder = DocumentFolder::with(['documents'])->find($id);\n            if($folder == null)\n            {\n                throw new Exception(\"Folder not found\", Response::HTTP_NOT_FOUND);\n                return;\n            }\n\n            $validData = $req->validated();\n            $documents = $validData['documents'];\n            unset($validData['documents']);\n            $folder->update($validData);\n            $folder->documents()->sync($documents);\n\n            return redirect()\n            ->route('citizen.document_folder.index')\n            ->with('success', 'Documents folder updated successfully');\n        });\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy($id)\n    {\n        return RequestHandler::handle(function() use($id) {\n            $folder = DocumentFolder::with(['documents'])->find($id);\n            if($folder == null)\n            {\n                throw new Exception(\"Folder not found\", Response::HTTP_NOT_FOUND);\n                return;\n            }\n\n            $folder->delete();\n\n            return redirect()\n            ->route('citizen.document_folder.index')\n            ->with('success', 'Documents folder deleted successfully');\n        });\n    }\n}\n",
    "format": "php"
  }
]